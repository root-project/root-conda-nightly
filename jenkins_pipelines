pipeline {
    agent {
        label 'lcg_docker_cc7'
    }
    // timestamps { // for some reason timestamps do not work in declarative pipelines
    stages {
        stage('Create docker container') {
            steps {
                sh 'docker run -t --detach -e ROOTTEST_BRANCH=v6-22-00 --name testconda condaforge/linux-anvil-comp7'
            }
        }
        stage('Test conda release') {
            steps {
                sh 'git clone --quiet --depth 1 https://gitlab.cern.ch/eguiraud/conda_root.git'
                sh 'docker cp conda_root/test_conda_root.sh testconda:.'
                sh 'docker exec -t testconda bash -i test_conda_root.sh'
            }
        }
        stage('Publish test results') {
            steps {
                sh 'rm -rf ctest_output && docker cp testconda:/root/job/roottest_build/Testing ctest_output'
                xunit thresholds: [failed(failureNewThreshold: '0', failureThreshold: '8', unstableNewThreshold: '0', unstableThreshold: '0')], tools: [CTest(deleteOutputFiles: true, failIfNotNew: true, pattern: 'ctest_output/*/*.xml', skipNoTestFiles: false, stopProcessingIfError: true)]
            }
        }
    }
    post {
        always {
            echo 'Cleaning up!'
            sh 'docker rm -f testconda'
            sh 'rm -rf conda_root'
        }
    }
    // }
}
